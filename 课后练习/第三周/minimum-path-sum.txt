#leetcode:64 最小路径和
给定一个包含非负整数的 m x n 网格 grid ，请找出一条从左上角到右下角的路径，使得路径上的数字总和为最小。

说明：每次只能向下或者向右移动一步。

解题思路：动态规划（数组遍历）
复杂度分析：时间复杂度O(MN) 空间复杂度O(1)

class Solution {
    public int minPathSum(int[][] grid) {
        // 解题思路： 数组遍历
        for (int i = 0; i < grid.length; i++){
            for (int j = 0; j < grid[0].length; j++){
                if (i == 0 && j == 0){
                    continue; //起点
                }else if(i == 0 ){
                    //上边界，上一值只能来自前一列
                    grid[i][j] = grid[i][j] + grid[i][j-1];
                }else if (j == 0){
                    //左边界，上一值只能来自前一行
                    grid[i][j] = grid[i][j] + grid[i-1][j];
                }else{
                    //不在边界，就取他左边和上边的最小值 + 当前值作为新值
                    grid[i][j] = Math.min( grid[i][j-1], grid[i-1][j]) + grid[i][j];
                }
                
            }

        }
        return grid[grid.length - 1][grid[0].length -1];
    }
}
