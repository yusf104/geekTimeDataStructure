#leetcode:1
#给定一个整数数组 nums 和一个整数目标值 target，请你在该数组中找出 和为目标值 的那 两个 整数，并返回它们的数组下标。

#解法一暴力枚举

class Solution {
    public int[] twoSum(int[] nums, int target) {
        //思路1：暴力枚举
        int[] res = new int[2];
        for (int i = 0; i< nums.length - 1; ++i){
            for (int j = i + 1; j < nums.length; ++j){
                if (nums[i] + nums[j] == target){
                    res[0] = i;
                    res[1] = j;
                }
            }
        }
        return res;
    }
}

#解法二哈希表

class Solution {
    public int[] twoSum(int[] nums, int target) {
      //哈希表解法思路
      //1.定义一个哈希表，key表示值，valu表示所在数组下标
      //2.遍历数组，如果哈希表不存在key = target - nums[i]，则放入哈希表中，否则返回

       Map<Integer, Integer> hashTable = new HashMap<Integer, Integer>();
       for (int i = 0; i < nums.length; i++){
           if (hashTable.containsKey(target - nums[i])){
               return new int[]{i, hashTable.get(target - nums[i])};
           }
           hashTable.put(nums[i], i);
       }
       return new int[0];
    }
}
