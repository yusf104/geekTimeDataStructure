leetcode:191 位1的个数
编写一个函数，输入是一个无符号整数（以二进制串的形式），返回其二进制表达式中数字位数为 '1' 的个数（也被称为汉明重量）。


解法一  Java API

public class Solution {
    public int hammingWeight(int n) {
        return Integer.bitCount(n);
    }
}

解法二 循环检查二进制位
复杂度分析：时间复杂度 O(N) 空间复杂度O(1)
public class Solution {
    // you need to treat n as an unsigned value
    public int hammingWeight(int n) {
        int count = 0;
        for (int i = 0; i < 32; i++){
            if ((n & (1 << i)) != 0){
                count++;
            }
        }
        return count;
    }
}

解法三 位运算优化
复杂度分析：时间复杂度O(logn) 空间复杂度O(1)
public class Solution {
    // you need to treat n as an unsigned value
    public int hammingWeight(int n) {
        int count = 0;
        while(n != 0){
            n &= n-1;
            count++;
        }
        return count;
    }
}
